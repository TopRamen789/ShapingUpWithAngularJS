Installed a package called: http-server
Go to cmd run http-server and it creates a web server wherever you are currently at.
Useful for this project since I didn't set it up as a node project initially, this works around this error:
"XMLHttpRequest cannot load file:///C:/.../product-title.html. Cross origin request are only supported for protocol schemes. httpk, data, chrome, chrome-extension, https."
"XMLHttpRequest cannot load file:///C:/.../product-panels.html. Cross origin request are only supported for protocol schemes. httpk, data, chrome, chrome-extension, https."

Shaping up with AngularJS

"Level 1"
----------------------------------------------------------------------------------------------------------------
Directives - Bind behavior to elements in HTML.
Modules - Define dependencies, is highly maintainable.
Controllers - Data handler, define app behavior by defining funcs and vals.
Expressions - Allow you to insert dynamic values into your html (numerical/string operations, probably more).


"Level 2" Filters, Directives, and Cleaner Code
----------------------------------------------------------------------------------------------------------------
Directives we've learned:
	-app			: Attach app module to page
	-controller 	: Attach controller function to page
	-show/hide 		: Display sections based on Expression
	-repeat 		: Repeat section for eac item in an Array

"Level 3" Forms, Models, and Validations
----------------------------------------------------------------------------------------------------------------


"Level 4" Creating a Directive with an Associated Controller
----------------------------------------------------------------------------------------------------------------
Template-expanding Directives are the simplest:
	-define a custom tag or attribute that is expanded or replaced
	-can indlue Controller logic, if needed

Also used for:
	Expressing complex UI
	Calling events and reigstering event handlers
	Reusing common components

